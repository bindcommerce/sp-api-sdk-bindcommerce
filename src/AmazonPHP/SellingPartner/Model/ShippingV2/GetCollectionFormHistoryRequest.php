<?php

declare(strict_types=1);

namespace AmazonPHP\SellingPartner\Model\ShippingV2;

use AmazonPHP\SellingPartner\Exception\AssertionException;
use AmazonPHP\SellingPartner\ModelInterface;
use AmazonPHP\SellingPartner\ObjectSerializer;

/**
 * Amazon Shipping API.
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 *
 * This class was auto-generated by https://openapi-generator.tech
 * Do not change it, it will be overwritten with next execution of /bin/generate.sh
 *
 * @implements \ArrayAccess<TKey, TValue>
 *
 * @template TKey int|null
 * @template TValue mixed|null
 */
class GetCollectionFormHistoryRequest implements \ArrayAccess, \JsonSerializable, \Stringable, ModelInterface
{
    final public const DISCRIMINATOR = null;

    /**
     * The original name of the model.
     *
     * @var string
     */
    protected static string $openAPIModelName = 'GetCollectionFormHistoryRequest';

    /**
     * Array of property to type mappings. Used for (de)serialization.
     *
     * @var string[]
     */
    protected static array $openAPITypes = [
        'client_reference_details' => '\AmazonPHP\SellingPartner\Model\ShippingV2\ClientReferenceDetail[]',
        'max_results' => 'int',
        'carrier_id' => 'string',
        'ship_from_address' => '\AmazonPHP\SellingPartner\Model\ShippingV2\Address',
        'date_range' => '\AmazonPHP\SellingPartner\Model\ShippingV2\DateRange',
    ];

    /**
     * Array of property to format mappings. Used for (de)serialization.
     *
     * @var string[]
     *
     * @phpstan-var array<string, string|null>
     *
     * @psalm-var array<string, string|null>
     */
    protected static array $openAPIFormats = [
        'client_reference_details' => null,
        'max_results' => null,
        'carrier_id' => null,
        'ship_from_address' => null,
        'date_range' => null,
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name.
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'client_reference_details' => 'clientReferenceDetails',
        'max_results' => 'maxResults',
        'carrier_id' => 'carrierId',
        'ship_from_address' => 'shipFromAddress',
        'date_range' => 'dateRange',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses).
     *
     * @var string[]
     */
    protected static array $setters = [
        'client_reference_details' => 'setClientReferenceDetails',
        'max_results' => 'setMaxResults',
        'carrier_id' => 'setCarrierId',
        'ship_from_address' => 'setShipFromAddress',
        'date_range' => 'setDateRange',
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests).
     *
     * @var string[]
     */
    protected static array $getters = [
        'client_reference_details' => 'getClientReferenceDetails',
        'max_results' => 'getMaxResults',
        'carrier_id' => 'getCarrierId',
        'ship_from_address' => 'getShipFromAddress',
        'date_range' => 'getDateRange',
    ];

    /**
     * Associative array for storing property values.
     *
     * @var mixed[]
     */
    protected array $container = [];

    /**
     * Constructor.
     *
     * @param null|mixed[] $data Associated array of property values
     *                           initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['client_reference_details'] = $data['client_reference_details'] ?? null;
        $this->container['max_results'] = $data['max_results'] ?? null;
        $this->container['carrier_id'] = $data['carrier_id'] ?? null;
        $this->container['ship_from_address'] = $data['ship_from_address'] ?? null;
        $this->container['date_range'] = $data['date_range'] ?? null;
    }

    /**
     * Array of property to type mappings. Used for (de)serialization.
     *
     * @return string[]
     */
    public static function openAPITypes() : array
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization.
     *
     * @return null[]|string[]
     */
    public static function openAPIFormats() : array
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name.
     *
     * @return string[]
     */
    public static function attributeMap() : array
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses).
     *
     * @return string[]
     */
    public static function setters() : array
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests).
     *
     * @return string[]
     */
    public static function getters() : array
    {
        return self::$getters;
    }

    /**
     * Gets the string presentation of the object.
     */
    public function __toString() : string
    {
        return \json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * The original name of the model.
     */
    public function getModelName() : string
    {
        return self::$openAPIModelName;
    }

    /**
     * Validate all properties.
     *
     * @throws AssertionException
     */
    public function validate() : void
    {
        if ($this->container['ship_from_address'] !== null) {
            $this->container['ship_from_address']->validate();
        }

        if ($this->container['date_range'] !== null) {
            $this->container['date_range']->validate();
        }
    }

    /**
     * Gets client_reference_details.
     *
     * @return null|\AmazonPHP\SellingPartner\Model\ShippingV2\ClientReferenceDetail[]
     */
    public function getClientReferenceDetails() : ?array
    {
        return $this->container['client_reference_details'];
    }

    /**
     * Sets client_reference_details.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\ShippingV2\ClientReferenceDetail[] $client_reference_details Object to pass additional information about the MCI Integrator shipperType: List of ClientReferenceDetail
     */
    public function setClientReferenceDetails(?array $client_reference_details) : self
    {
        $this->container['client_reference_details'] = $client_reference_details;

        return $this;
    }

    /**
     * Gets max_results.
     */
    public function getMaxResults() : ?int
    {
        return $this->container['max_results'];
    }

    /**
     * Sets max_results.
     *
     * @param null|int $max_results max Number of Results for query
     */
    public function setMaxResults(?int $max_results) : self
    {
        $this->container['max_results'] = $max_results;

        return $this;
    }

    /**
     * Gets carrier_id.
     */
    public function getCarrierId() : ?string
    {
        return $this->container['carrier_id'];
    }

    /**
     * Sets carrier_id.
     *
     * @param null|string $carrier_id the carrier identifier for the offering, provided by the carrier
     */
    public function setCarrierId(?string $carrier_id) : self
    {
        $this->container['carrier_id'] = $carrier_id;

        return $this;
    }

    /**
     * Gets ship_from_address.
     */
    public function getShipFromAddress() : ?Address
    {
        return $this->container['ship_from_address'];
    }

    /**
     * Sets ship_from_address.
     *
     * @param null|Address $ship_from_address ship_from_address
     */
    public function setShipFromAddress(?Address $ship_from_address) : self
    {
        $this->container['ship_from_address'] = $ship_from_address;

        return $this;
    }

    /**
     * Gets date_range.
     */
    public function getDateRange() : ?DateRange
    {
        return $this->container['date_range'];
    }

    /**
     * Sets date_range.
     *
     * @param null|DateRange $date_range date_range
     */
    public function setDateRange(?DateRange $date_range) : self
    {
        $this->container['date_range'] = $date_range;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     */
    public function offsetExists($offset) : bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @return null|mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset) : mixed
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     */
    public function offsetSet($offset, $value) : void
    {
        if (null === $offset) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     */
    public function offsetUnset($offset) : void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     *
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed returns data which can be serialized by json_encode(), which is a value
     *               of any type other than a resource
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize() : string
    {
        return \json_encode(ObjectSerializer::sanitizeForSerialization($this), JSON_THROW_ON_ERROR);
    }

    /**
     * Gets a header-safe presentation of the object.
     */
    public function toHeaderValue() : string
    {
        return \json_encode(ObjectSerializer::sanitizeForSerialization($this), JSON_THROW_ON_ERROR);
    }
}
